<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="boardMapper">

	<!-- <resultMap type="" id=""></resultMap> -->

	<!-- 게시글 전체목록 조회 및 검색 조회 -->
	<select id="listAll" resultType="BoardVO">
		<include refid="pagingHeader" />
		SELECT bno, title, content, writer, regdate, viewcnt, user_name AS userName, show, 
		<!-- **댓글 숫자 표시 -->
		(SELECT COUNT(*) FROM reply WHERE bno=board.bno) AS recnt
		FROM board, member
		<!-- WHERE절을 include로 삽입 -->
		<include refid="search" />
		ORDER BY bno desc, regdate DESC
		<include refid="pagingFooter" />
	</select>

	<!-- 게시글 레코드 개수 -->
	<select id="countArticle" resultType="int">
		SELECT COUNT(*) FROM board, member
		<!-- WHERE절을 include로 삽입 -->
		<include refid="search" />
	</select>

	<!-- sql code 조각 -->
	<!-- 반복되는 sql의 일부를 sql태그를 이용해 따로 관리 -->
	<!-- 검색 조건 sql -->
	<sql id="search">
		<choose>
			<!-- 검색옵션이 전체 검색일 경우 -->
			<when test="searchOption == 'all'">
				WHERE board.writer = member.user_id
				AND (
				user_name
				like '%'||#{keyword}||'%'
				OR content like '%'||#{keyword}||'%'
				OR
				title like '%'||#{keyword}||'%')
			</when>

			<!-- 검색옵션이 전체 검색이 아닐 경우 -->
			<otherwise>
				WHERE board.writer = member.user_id
				AND (${searchOption}
				like '%'||#{keyword}||'%')
			</otherwise>
		</choose>
	</sql>

	<!-- 페이징 sql -->
	<sql id="pagingHeader">
		SELECT * FROM (
		SELECT ROWNUM AS rn, A.* FROM (
	</sql>
	<sql id="pagingFooter">
		) A
		)WHERE rn BETWEEN #{start} AND #{end}
	</sql>

	<!-- 02. 게시글 작성 -->
	<insert id="write">
		INSERT INTO board (
		bno,
		title,
		content,
		writer,
		show
		) VALUES (
		(SELECT NVL(MAX(bno)+1, 1)FROM board),
		#{title},
		#{content},
		#{writer},
		'y'
		)
	</insert>
	
	<!--03. 게시글 상세보기 조회 -->
	<select id="detail" resultType="BoardVO">
		SELECT bno, title, content,
		writer, regdate, viewcnt, user_name as userName, show
		FROM board, member
		WHERE board.writer = member.user_id
		AND bno = #{bno}
	</select>
	
	<!-- 04. 게시글 조회수 증가처리 -->
	<update id="increaseViewcnt">
		UPDATE board SET viewcnt = viewcnt + 1
		WHERE bno =
		#{bno}
	</update>
	
	<!-- 05. 게시글 수정처리 -->
	<update id="update">
		UPDATE board SET
		title = #{title},
		content =
		#{content},
		writer = #{writer}
		WHERE bno = #{bno}
	</update>
	
	<!-- 06. 게시글 삭제처리 -->
	<!-- DB에서 영구 삭제 -->
	<!-- <delete id="delete">
		DELETE FROM board
		WHERE bno = #{bno}
	</delete> -->
	
	<!-- DB에서 삭제하지 않고, update를 이용해 삭제유무의 상태만 변경 -->
	<update id="delete">
		UPDATE board SET show = 'n' WHERE bno = #{bno}
	</update>










</mapper>
 